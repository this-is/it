!function(a){"use strict";var b=function(a){return new c(a)},c=function(a){this.originalValue=a,this.value=a};c.prototype={originalValue:"",formatter:"",value:"",valid:!0,errorMessages:[],forcedValidate:!1,pipe:function(a){return this.valid===!0&&a.call(this),this},is:function(a){if(void 0===a||"string"!=typeof a||0===a.length)throw new Error("Validation string cannot be empty");var b=a.split(".");if(0!==b.length)for(var c=0;c<b.length;c++){var f=b[c];if(-1===f.indexOf("|")){var g=[];if(-1!==f.indexOf(" ")){g=d.call(this,f);var h=f.split(" ")[0];this[h].apply(this,g)}else this[f]()}else for(var i=f.split("|"),j=0;j<i.length;j++){var k=i[j];""!==k&&e.call(this,k)}}return this}};var d=function(a){var b=[];if(void 0!==a){var c=a.split(" ");c.length>1&&""!==c[1]&&(b=c[1].split(","))}return b},e=function(a){this.forcedValidate=!0;var b=[],c=a.split(" ")[0],e=this[c];b=d.call(this,a),e.apply(this,b),this.forcedValidate=!1};b.to=function(a){var b=null,d=null,e=(g(a),f(arguments));b=e.config,d=e.callback,c.prototype[a]=function(){return d.apply(this,arguments),this}},b.is=function(a){var b=null,d=null;g(a);var e=f(arguments);b=e.config,d=e.callback,c.prototype[a]=function(){return(this.valid===!0||this.forcedValidate===!0)&&d.apply(this,arguments),this}};var f=function(a){var b=null,c=null,d=a[0];if(!(a.length>=2))throw new Error("Please provide a callback function as second parameter for validator: "+d);if("object"==typeof a[1]&&null!==a[1]){if(b=a[1],!(a.length>2))throw new Error("Please provide a callback function as third parameter for validator: "+d);if("function"!=typeof a[2])throw new Error("Please provide a callback function as third parameter for validator: "+d);c=a[2]}else{if("function"!=typeof a[1])throw new Error("Please provide a callback function or configuration object as second parameter for validator: "+d);c=a[1]}return{config:b,callback:c}},g=function(a){if(void 0===a||"string"!=typeof a)throw new Error("Please provide a string value as name of the validator");var b=new RegExp(/^[\w]*$/);if(b.test(a)!==!0)throw new Error("Only alphanumeric characters allowed in name")};a.it=b}(this);